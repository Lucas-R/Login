services:
  database:
    image: postgres:13
    container_name: wellgen_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - ${BD_HOST_PORT}:${BD_CONTAINER_PORT}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - wellgen-network

  backend:
    image: backend:1.0.0
    container_name: wellgen_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        DOCKERFILE_PORT: ${BACKEND_CONTAINER_PORT}
    ports:
      - ${BACKEND_HOST_PORT}:${BACKEND_CONTAINER_PORT}
    environment:
      DOCKERFILE_PORT: ${BACKEND_CONTAINER_PORT}
      SERVER_HOST: ${BACKEND_HOST}
      SERVER_PORT: ${BACKEND_CONTAINER_PORT}
      DB_HOST: database
      DB_PORT: ${BD_CONTAINER_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      CLERK_PUBLISHABLE_KEY: ${CLERK_PUBLISHABLE_KEY}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY} 
    depends_on:
      database:
        condition: service_healthy
    restart: always
    networks:
      - wellgen-network 

  pgadmin:
    image: dpage/pgadmin4
    container_name: wellgen_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - wellgen-network

volumes:
  db_data:

networks:
  wellgen-network: